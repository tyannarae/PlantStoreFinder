{"version":3,"sources":["database/stores.ts","context/pages/cityPage.ts","media/placeholder.png","utils/pagination.tsx","components/mediaModal.tsx","components/storeMedia.tsx","media/fbLogo.png","media/igLogo.png","components/storeDetails.tsx","components/map.tsx","database/weatherResults.ts","components/topNav.tsx","App.tsx","index.tsx"],"names":["Stores","city","state","mapCoordinates","lat","lng","stores","id","bussinessName","website","address","phone","igHandle","fbHandle","blurb","photos","CityPageContext","createContext","selectedStore","setSelectedStore","chosenStore","console","warn","isModalOpen","setModalOpen","isOpen","storeIdToIndexMap","storeId","forEach","store","index","mapStoreIdsToIndex","scrolledStoreId","setScrolledStoreId","seletedCity","photoForward","photoIndex","totalPhotos","setPhotoIndex","photoBackward","addDefaultSrc","fallbackImg","MediaModal","MediaModalProps","useContext","length","useState","closeModal","className","onClick","data-testid","event","stopPropagation","src","alt","onError","StoreMedia","StoreMediaProps","React","imgUrl","StoreDetails","StoreDetailsProps","href","rel","target","fbLogo","igLogo","Map","MapDetailsProps","center","SetViewOnScroll","parentMap","useMap","setView","getZoom","MapContainer","zoom","scrollWheelZoom","TileLayer","attribution","url","map","Marker","position","eventHandlers","click","Popup","getWeather","a","darkSkyUrl","toString","fetch","response","json","body","temp","JSON","stringify","currently","apparentTemperature","parseFloat","alert","TopNav","TopNavProps","setTemp","isLoading","setLoading","getCurrentTempature","tempature","useEffect","role","toFixed","App","parentEl","document","getElementById","addEventListener","Object","entries","key","value","getBoundingClientRect","top","bottom","window","innerHeight","val","Number","element","scrollIntoView","behavior","Provider","path","undefined","classNames","style","width","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5efd4026.chunk.js","sourcesContent":["//this interface is for a single store in the Stores database\nexport interface Store {\n    id: string,\n    city: string,\n    state: string,\n    lat: number,\n    lng: number,\n    bussinessName: string,\n    website?: string,\n    address: string,\n    phone?: string,\n    igHandle?: string,\n    fbHandle?: string,\n    blurb: string,\n    photos: Array<string>,\n}\nexport interface MapCoordinates {\n    lat: number,\n    lng: number,\n}\n//each city will contain corrdinates for our map component plus the list of stores\nexport interface CityDetails {\n    city: string, \n    state: string,\n    mapCoordinates: MapCoordinates,\n    stores: \n        Array<Store>,\n}\n//below is our database\nexport const Stores: Array<CityDetails> = [\n  {\n    city: \"Austin\",\n    state: \"Texas\",\n    mapCoordinates: {\n      lat: 30.2672,\n      lng: -97.7431,\n    },\n    stores: [\n      {\n        id: '1',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.261270,\n        lng: -97.704220,\n        bussinessName: \"East Austin Succulents\",\n        website: \"https://eastaustinsucculents.com/\",\n        address: \"801 Tillery St, Austin, Texas 78702\",\n        phone: \"(512)701-3448\",\n        igHandle: \"https://www.instagram.com/eastaustinsucculents/\",\n        fbHandle: \"https://www.facebook.com/east.austinsucculents\",\n        blurb: \"East Austin Succulents is Austin's most diverse & creative Cactus & Succulent Nursery\",\n        photos: [\"https://www.mollyonthemoveblog.com/wp-content/uploads/2016/05/east-austin-succulents.jpg\", \n        \"https://www.atasteofkoko.com/wp-content/uploads/2017/04/East-Austin-Succulents-FB-Cover.jpg\", \n        \"https://rootedinmoss.files.wordpress.com/2015/11/img_2245.jpg\"],\n      },\n      {\n        id: '2',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.234070,\n        lng: -97.757650,\n        bussinessName: \"The Great Outdoors\",\n        website: \"http://gonursery.com/\",\n        address: \"2730 S Congress Ave, Austin, TX 78704\",\n        phone: \"(512)448-2992\",\n        igHandle: \"https://www.instagram.com/greatoutdoorsaustin/\",\n        fbHandle: \"https://www.facebook.com/GreatOutdoorsNursery\",\n        blurb: \"Under a sprawling canopy of oaks, we’ve been supplying South Austin with all manner of succulents, cacti, veggies, herbs, pottery, plants and more.\",\n        photos: [\"https://static.spacecrafted.com/d078d55d64e54701ae679f035f8e1ebf/i/ba45a66f1f6c4205bb84140f9a0b2a34/1/4SoifmQp45JMgBnHp7ed2/download-3.jpg\", \n        \"https://static.spacecrafted.com/d078d55d64e54701ae679f035f8e1ebf/i/d67265fd14e1494c84307a2973d0d8e7/1/2GTQbgiNxerRr5gcT6hkjr8dsnb6NBTxXMi2obS?dpr=2/IMG_0041.jpg?dpr=2\", \n       ],\n      },\n      {\n        id: '97f703170skjh',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.256830,\n        lng: -97.703170,\n        bussinessName: \"Tropic Of Capricorn\",\n        website: \"http://www.shoptropicofcapricorn.com/\",\n        address: \"3501 E 7th St, Austin, TX 78702\",\n        phone: \"\",\n        igHandle: \"\",\n        fbHandle: \"\",\n        blurb: \"With years of experience keeping plants healthy and thriving, we've got your back whether you're a business, busy home owner, run an AirBnB offsite or just taking an extended vacation. Our maintenance service offers watering, pruning, dusting of leaves, re-potting and plant replacement at cost for weekly plans.\",\n        photos: [\"https://www.shoptropicofcapricorn.com/uploads/b/6db169f0-8a49-11e9-884b-e35f0442d2c7/E63B970A-E1D1-411F-ADC9-D1F00D431A3F.JPG?width=1200\", \n        \"https://www.shoptropicofcapricorn.com/uploads/b/6db169f0-8a49-11e9-884b-e35f0442d2c7/04A2CF9F-0CC2-41DA-BFED-F45D86BADD33_MzgzMD.jpg?width=1200\",\n        \"https://www.shoptropicofcapricorn.com/uploads/b/6db169f0-8a49-11e9-884b-e35f0442d2c7/1dea23a0-9544-11ea-95ae-d9a035d69153.jpg?width=1200\" \n       ],\n      }, \n       {\n        id: '2689sd2Ga',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.268921,\n        lng: -97.727402,\n        bussinessName: \"Plant Party\",\n        website: \"http://www.plantparty.co/\",\n        address: \"1200 E 11th St, Austin, TX 78702\",\n        phone: \"(888)272-6499\",\n        igHandle: \"https://www.instagram.com/plantparty.co/\",\n        fbHandle: \"https://business.facebook.com/plantparty.co/\",\n        blurb: \"At Plant Party, we see terrariums as an art form, as a form of creativity using the best pallet, natural materials and designs straight from mother nature. Were excited to now offer our kits so you can take our classes anywhere!\",\n        photos: [\"https://cdn.shopify.com/s/files/1/0331/4665/products/image_90b3a7fb-5f3b-4aa7-873a-73766c17b3c6_1024x1024.jpg?v=1588075252\", \n        \"https://scontent-dfw5-2.xx.fbcdn.net/v/t1.6435-9/145397613_4494188370607585_552864121514003257_n.jpg?_nc_cat=102&ccb=1-3&_nc_sid=973b4a&_nc_ohc=jLrqjfODBOMAX-2gANN&_nc_oc=AQmBVAUIxWm0VX4oHWdyZSYwuIHPbSpWCz81q5nfdGf0Ulezu7qOjNY2NAnXQGj6IiyuF7ReDXcPOYPa8q8o8vYK&_nc_ht=scontent-dfw5-2.xx&oh=f919741f4693f8e47af268d7a7aa04b1&oe=60ADA50D\",\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT20_15MHh3m_y1rjgDjx6kJtdirMCMogr0Lg&usqp=CAU\", \n       ],\n      },  \n          {\n        id: 'ABF*828',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.295840,\n        lng: -97.828370,\n        bussinessName: \"Barton Springs Nursery\",\n        website: \"http://www.bartonspringsnursery.com/\",\n        address: \"3601 Bee Cave Rd, Austin, TX 78746\",\n        phone: \"(512)328-6655\",\n        igHandle: \"https://www.instagram.com/bartonspringsnursery/\",\n        fbHandle: \"https://www.facebook.com/bartonspringsnursery/\",\n        blurb: \"Since 1986 we've taken pride in offering one of the best selections of native plants in Central Texas. The majority of our plants grow right here in the nursery, where they become acclimated to our soil, water, and climate.\",\n        photos: [\"https://scontent-dfw5-2.xx.fbcdn.net/v/t1.6435-9/156689198_10165025026060456_7699557722342761529_n.jpg?_nc_cat=108&ccb=1-3&_nc_sid=a26aad&_nc_ohc=TMLFO0mGB10AX_IcYTc&_nc_ht=scontent-dfw5-2.xx&oh=7ab0a24be54f1ee8b2c2c1b803d801e9&oe=60AF0861\", \n        \"https://scontent-dfw5-1.xx.fbcdn.net/v/t1.6435-9/157317398_10165016461840456_6503459955501990532_n.jpg?_nc_cat=101&ccb=1-3&_nc_sid=a26aad&_nc_ohc=VJygC9G7PFQAX9LvIzk&_nc_ht=scontent-dfw5-1.xx&oh=c6b315d1672fd026c0385a8e3f088c99&oe=60ADB32F\", \n        \"https://scontent-dfw5-1.xx.fbcdn.net/v/t1.6435-9/95354088_10163529193575456_4676456088051122176_n.jpg?_nc_cat=111&ccb=1-3&_nc_sid=8bfeb9&_nc_ohc=dqTV2u1_SVcAX9zKwlK&_nc_oc=AQlyEmZzF3y2b0k8UFVN-_CErh5aOGUlfr3lCNMgabS6j-f2etTgkUN4NjjuWOpSc2BVrnPtI4xMOfRA0ncFtmjr&tn=kPO5_qRCjTd3tbJu&_nc_ht=scontent-dfw5-1.xx&oh=669ae9ef7186f4d8d7bdec4bb5a179af&oe=60B0B6F1\"\n       ],\n      }, \n          {\n        id: '7479JlMk',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.327720,\n        lng: -97.747980,\n        bussinessName: \"Shoal Creek Nursery\",\n        website: \"http://shoalcreeknursery.com/\",\n        address: \"2710 Hancock Dr, Austin, TX 78731\",\n        phone: \"(512)458-5909\",\n        igHandle: \"https://www.instagram.com/shoalcreeknursery/\",\n        fbHandle: \"\",\n        blurb: \"Shoal Creek Nursery, situated on an acre and a half in central Austin’s most beautiful district, has everything you need to complete your landscape project. Our wide selection of high quality plants, imported pottery, water features, gardening supplies and gifts are complimented with personal attention by our experienced staff.\",\n        photos: [\"https://86cb8127dc14737f5057-7c0671222953158607ea93d5febd68b4.ssl.cf1.rackcdn.com/189/assets/responsive/563000/563546/tour10.jpg\", \n        \"https://86cb8127dc14737f5057-7c0671222953158607ea93d5febd68b4.ssl.cf1.rackcdn.com/189/assets/responsive/563000/563548/tour12.jpg\", \n        \"https://86cb8127dc14737f5057-7c0671222953158607ea93d5febd68b4.ssl.cf1.rackcdn.com/189/assets/responsive/563000/563556/tour19.jpg\"\n      ],\n      }, \n            {\n        id: '72red2397',\n        city: \"Austin\",\n        state: \"Texas\",\n        lat: 30.403049,\n        lng: -97.722397,\n        bussinessName: \"Desk Plants\",\n        website: \"http://www.deskplants.com/\",\n        address: \"3200 Palm Way Suite 150, Austin, TX 78758\",\n        phone: \"\",\n        igHandle: \"https://www.instagram.com/desk_plants/\",\n        fbHandle: \"https://www.facebook.com/buydeskplants\",\n        blurb: \"Our mission is to help improve your work space to allow you to feel happier and breathe healthier air on the job. By working with low maintenance plants that have been clinically studied by major institutions around the world including NASA, Desk Plants provides that important connection to nature indoors.\",\n        photos: [\"https://scontent-dfw5-2.xx.fbcdn.net/v/t1.6435-9/109508897_570493073619791_6446216599603871327_n.jpg?_nc_cat=106&ccb=1-3&_nc_sid=9267fe&_nc_ohc=rV-reEXyOjUAX-akRbO&_nc_ht=scontent-dfw5-2.xx&oh=794d56b8c4817dc611a4c91558922556&oe=60AF26F6\", \n        \"https://scontent-dfw5-1.xx.fbcdn.net/v/t1.6435-9/47222052_261579077844527_5966573000009449472_n.jpg?_nc_cat=103&ccb=1-3&_nc_sid=a26aad&_nc_ohc=bZdnCjctWCQAX9IIs_z&_nc_ht=scontent-dfw5-1.xx&oh=534c4521fa835c490999ab2f08dd1ba1&oe=60B03C83\", \n        \"https://scontent-dfw5-2.xx.fbcdn.net/v/t1.6435-9/109934325_571663360169429_8985545188858650225_n.jpg?_nc_cat=100&ccb=1-3&_nc_sid=9267fe&_nc_ohc=pR_mkpeqTZIAX_R0sUj&_nc_ht=scontent-dfw5-2.xx&oh=22cf44a227ef800a36f9579c7234dc1c&oe=60AEA93C\"\n       ],\n      }, \n    ],\n  },\n];\n","\nimport { createContext } from \"react\";\nimport { Store, Stores,CityDetails, MapCoordinates } from \"../../database/stores\"; //creating the database on a different branch.\n\nconst stores = Stores[0].stores;\n\n\ninterface StoreIndexMap {   //interface for the map of store indices and their id.\n   [id: string]: number //key will be store ID and value will be index\n}\nexport const mapStoreIdsToIndex =(stores: Array<Store>) =>{\n  let storeId: StoreIndexMap = {}; \n  stores.forEach( \n    (\n      store: Store,\n      index: number \n    ) => storeId[store.id] = index\n  )\n  return storeId\n}\nexport type CityPageContextType = {\n  city: CityDetails;\n  seletedCity: MapCoordinates;\n  scrolledStoreId: string;\n  setScrolledStoreId: (chosenStore: string) => void;\n  selectedStore: Store;\n  setSelectedStore: (chosenStore: Store) => void;\n  isModalOpen: boolean;\n  setModalOpen: (isOpen: boolean) => void;\n  stores: Array<Store>;\n  storeIdToIndexMap: StoreIndexMap;\n};\n\nexport const CityPageContext = createContext<CityPageContextType>({\n  city: Stores[0],\n  selectedStore: stores[0],\n  setSelectedStore: (chosenStore) =>\n  console.warn(\"no setSelectedStore context provider\"),\n  isModalOpen: false,     \n  setModalOpen: (isOpen) => console.warn(\"modal no context provider\"),\n  stores: stores,\n  storeIdToIndexMap: mapStoreIdsToIndex(stores),\n  scrolledStoreId: stores[0].id,\n  setScrolledStoreId: (chosenStore) =>\n    console.warn(\"no setSelectedStore context provider\"),\n  seletedCity: Stores[0].mapCoordinates,\n});\n\nexport const useCityPageContext = createContext(CityPageContext);","export default __webpack_public_path__ + \"static/media/placeholder.718d5978.png\";","import fallbackImg from \"../media/placeholder.png\";\n\n//moves forward 1 photo\nexport const photoForward = (\n  photoIndex: number,\n  totalPhotos: number,\n  setPhotoIndex: Function\n) => {\n  if (photoIndex < totalPhotos) {\n    return setPhotoIndex(photoIndex + 1);\n  }\n  //otherwise rotate to beginning of photos\n  return setPhotoIndex(0);\n};\n//moves backwards 1 photo\nexport const photoBackward = (\n  photoIndex: number,\n  totalPhotos: number,\n  setPhotoIndex: Function\n) => {\n  if (photoIndex > 0) {\n    return setPhotoIndex(photoIndex - 1);\n  }\n  //otherwise go to the end of the photos\n  return setPhotoIndex(totalPhotos);\n};\n\n//add a default img src\nexport function addDefaultSrc() {\n  return fallbackImg;\n}\n","import { FunctionComponent, useContext, useState } from \"react\";\nimport { CityPageContext } from \"../context/pages/cityPage\";\nimport {\n  photoBackward,\n  photoForward,\n  addDefaultSrc,\n} from \"../utils/pagination\";\nimport \"./mediaModal.scss\";\n\nexport interface MediaModalProps {\n  photos: Array<string>;\n}\nexport const MediaModal: FunctionComponent<MediaModalProps> = (\n  MediaModalProps\n) => {\n  const { setModalOpen } = useContext(CityPageContext);\n  const { photos } = MediaModalProps;\n  const totalPhotos = photos.length - 1;\n  const [photoIndex, setPhotoIndex] = useState<number>(0);\n  function closeModal() {\n    setModalOpen(false);\n  }\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" onClick={closeModal}>\n        <div className=\"container\">\n          <button\n            data-testid=\"modalImgBackward\"\n            className=\"backwardArrowModal modalArrows button is-outlined\"\n            onClick={(event) => {\n              event.stopPropagation();\n              photoBackward(photoIndex, totalPhotos, setPhotoIndex);\n            }}\n          >\n            {\"<\"}\n          </button>\n          <button\n            data-testid=\"modalImgForward\"\n            className=\"forwardArrowModal modalArrows button is-outlined\"\n            onClick={(event) => {\n              event.stopPropagation();\n              photoForward(photoIndex, totalPhotos, setPhotoIndex);\n            }}\n          >\n            {\">\"}\n          </button>\n          <div className=\"exitAndImgContainer\">\n            <button\n              data-testid=\"exitButton\"\n              className=\"exitButton button is-outlined\"\n              onClick={closeModal}\n            >\n              X\n            </button>\n            <img\n              data-testid=\"modalImg\"\n              className=\"plantModalPhoto\"\n              src={photos[photoIndex]}\n              alt={`plant store img`}\n              onError={addDefaultSrc}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent, useContext } from \"react\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { CityPageContext } from \"../context/pages/cityPage\";\nimport {\n  photoBackward,\n  photoForward,\n  addDefaultSrc,\n} from \"../utils/pagination\";\nimport \"./storeMedia.scss\";\nexport interface StoreMediaProps {\n  photos: Array<string>;\n  id: string;\n}\nexport const StoreMedia: FunctionComponent<StoreMediaProps> = (\n  StoreMediaProps\n) => {\n  const {\n    setModalOpen,\n    setSelectedStore,\n    storeIdToIndexMap,\n    stores,\n  } = useContext(CityPageContext);\n  const { photos, id } = StoreMediaProps;\n  const [imgUrl] = React.useState<string>(addDefaultSrc());\n  const totalPhotos = photos.length - 1;\n  const [photoIndex, setPhotoIndex] = React.useState<number>(0);\n\n  function handleImgClick() {\n    setModalOpen(true);\n    setSelectedStore(stores[storeIdToIndexMap[id]]);\n  }\n\n  return (\n    <div className=\"card-content\">\n      <div>\n        <div onClick={handleImgClick}>\n          <LazyLoadImage\n            data-testid=\"lazyLoadImage\"\n            className=\"plantStorePhoto\"\n            src={photos[photoIndex]}\n            alt={imgUrl}\n            onError={addDefaultSrc}\n          />\n        </div>\n      </div>\n\n      <div className=\"arrowContainer\">\n        <div\n          data-testid=\"imageBackward\"\n          className=\"pagination-previous backwardArrow\"\n          onClick={() => {\n            photoBackward(photoIndex, totalPhotos, setPhotoIndex);\n          }}\n        >\n          {\"<\"}\n        </div>\n        <div\n          data-testid=\"imageForward\"\n          className=\"pagination-next forwardArrow\"\n          onClick={() => {\n            photoForward(photoIndex, totalPhotos, setPhotoIndex);\n          }}\n        >\n          {\">\"}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/fbLogo.5b4225fa.png\";","export default __webpack_public_path__ + \"static/media/igLogo.f7b3dff3.png\";","import React, { FunctionComponent, useContext } from \"react\";\nimport { CityPageContext } from \"../context/pages/cityPage\";\nimport { Store } from \"../database/stores\";\nimport fbLogo from \"../media/fbLogo.png\";\nimport igLogo from \"../media/igLogo.png\";\nimport \"../components/storeDetails.scss\";\n\nexport interface StoreDetailsProps {\n  store: Store;\n  id: string;\n}\nexport const StoreDetails: FunctionComponent<StoreDetailsProps> = (\n  StoreDetailsProps\n) => {\n  const {\n    id,\n    bussinessName,\n    website,\n    address,\n    phone,\n    igHandle,\n    fbHandle,\n    blurb,\n  } = StoreDetailsProps.store;\n\n  const {\n    setSelectedStore,\n    storeIdToIndexMap,\n    stores,\n    setScrolledStoreId,\n  } = useContext(CityPageContext);\n\n  return (\n    <div\n      key={id}\n      className=\"card-content \"\n      onClick={(event) => {\n        setSelectedStore(stores[storeIdToIndexMap[id]]);\n        setScrolledStoreId(id);\n      }}\n    >\n      <div className=\"tile is-ancestor\" id={id}>\n        <div className=\"tile is-vertical\">\n          <div className=\"tile header\">\n            <div className=\"businessNameContainer tile is-parent is-vertical is-10\">\n              <div className=\"businessName\">{bussinessName}</div>\n            </div>\n            <div className=\"tile is-parent is-vertical endItem \">\n              <div className=\"tile\">\n                {fbHandle ? (\n                  <a\n                    className=\"linkImg\"\n                    href={fbHandle}\n                    rel=\"noopener noreferrer\"\n                    data-testid=\"fbHandle\"\n                    target=\"_blank\"\n                  >\n                    <img className=\" tile is-vertical\" alt=\"a\" src={fbLogo} />\n                  </a>\n                ) : null}\n                {igHandle ? (\n                  <a\n                    className=\"linkImg\"\n                    href={igHandle}\n                    rel=\"noopener noreferrer\"\n                    data-testid=\"igHandle\"\n                    target=\"_blank\"\n                  >\n                    <img className=\" tile is-vertical\" alt=\"a\" src={igLogo} />\n                  </a>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          <div className=\"tile infoDetails\">\n            <div className=\" address tile is-parent is-vertical\">\n              <div>{address}</div>\n            </div>\n            <div className=\"tile is-parent is-vertical endItem\">\n              {phone ? <div>{phone}</div> : null}\n              {website ? (\n                <a\n                  data-testid=\"websiteLink\"\n                  href={website}\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  Visit Website\n                </a>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"blurb is-parent tile\">{blurb}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, FunctionComponent } from \"react\";\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\nimport { CityPageContext } from \"../context/pages/cityPage\";\nimport \"./map.scss\";\n\nexport interface MapDetailsProps {\n  center: [number, number];\n}\n\nexport const Map: FunctionComponent<MapDetailsProps> = (MapDetailsProps) => {\n  const { center } = MapDetailsProps;\n  const { stores, setScrolledStoreId } = useContext(CityPageContext);\n  const zoom = 13;\n\n  //this is required in order to update MapContainer center\n  function SetViewOnScroll() {\n    const parentMap = useMap();\n    parentMap.setView(center, parentMap.getZoom());\n    return null;\n  }\n\n  return (\n    <div data-testid=\"mapContainer\">\n      <MapContainer\n        id=\"mapid\"\n        center={center}\n        zoom={zoom}\n        scrollWheelZoom={false}\n      >\n        <SetViewOnScroll />\n\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {stores.map((store: any) => (\n          <Marker\n            position={[store.lat, store.lng]}\n            eventHandlers={{\n              click: () => {\n                setScrolledStoreId(store.id);\n              },\n            }}\n          >\n            <Popup>{store.bussinessName}</Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default Map;\n","// how the user can retreive tempature data for the city\n//set this to try cach block\nexport async function getWeather(lat: number, lng: number) {\n  try {\n    const darkSkyUrl =\n      \"https://api.darksky.net/forecast/8ae444357252f2b0ac14bab6b546d9ed/\" +\n      lat.toString() +\n      \",\" +\n      lng.toString();\n    const response = await fetch(darkSkyUrl);\n    const body = await response.json();\n    let temp = JSON.stringify(body.currently.apparentTemperature);\n    return parseFloat(temp);\n  } catch (e) {\n    alert(e);\n  }\n}\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\nimport { getWeather } from \"../database/weatherResults\";\nimport { CityDetails } from \"../database/stores\";\nimport \"./navbar.scss\";\n\nexport interface TopNavProps {\n  city: CityDetails;\n}\nexport const TopNav: FunctionComponent<TopNavProps> = (TopNavProps) => {\n  const [temp, setTemp] = useState<number>();\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const { city } = TopNavProps;\n\n  //anytime a new city is chosen, this function will be called to update the tempature\n  const getCurrentTempature = async () => {\n    let tempature = await getWeather(\n      city.mapCoordinates.lat,\n      city.mapCoordinates.lng\n    );\n    setTemp(tempature);\n  };\n\n  //get the weather data\n  useEffect(() => {\n    setLoading(true);\n    getCurrentTempature();\n    setLoading(false);\n  }, [city]); //only makes call when a different city is chosen.\n\n  //check that there is a tempature avaiable. if not, dont display the temp.\n  const renderTempature = () => {\n    //temp is available\n    if (temp) {\n      return (\n        <div className=\"navbar-item \">\n          Currently\n          {\" \" + temp.toFixed(0) + \" \"}°\n        </div>\n      );\n    }\n    //no temp avaiable\n    return null;\n  };\n  //check that city and state details are avaiable. only display what is avaiable.\n  const renderCityData = () => {\n    //both city and state avaiable\n    if (city.city && city.state) {\n      return <div className=\"navbar-item\">{city.city + \", \" + city.state}</div>;\n    }\n    //only city avaiable\n    if (city.city && !city.state) {\n      return <div className=\"navbar-item\">{city.city}</div>;\n    }\n    //only state avaiable\n    if (!city.city && city.state) {\n      return <div className=\"navbar-item\">{city.state}</div>;\n    }\n    //nothing aviable\n    return null;\n  };\n\n  return isLoading ? (\n    <div>loading..</div>\n  ) : (\n    <nav className=\"navbar\" id=\"navbarBasicExample\" role=\"navigation\">\n      <div className=\"navbar-menu menuItems\" data-testid=\"NavbarItems\">\n        <div className=\"navbar-end\">\n          {renderCityData()}\n          {renderTempature()}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default TopNav;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { LazyLoadComponent } from \"react-lazy-load-image-component\";\nimport classNames from \"classnames\";\nimport { MediaModal } from \"./components/mediaModal\";\nimport { CityPageContext } from \"./context/pages/cityPage\";\nimport { StoreMedia } from \"./components/storeMedia\";\nimport { StoreDetails } from \"./components/storeDetails\";\nimport Map from \"./components/map\";\nimport TopNav from \"./components/topNav\";\nimport \"./App.scss\";\n\nfunction App() {\n  const { storeIdToIndexMap, stores, seletedCity, city } = useContext(\n    CityPageContext\n  );\n  const [selectedStore, setSelectedStore] = useState(stores[0]);\n  const [isModalOpen, setModalOpen] = useState<boolean>(false);\n  const [scrolledStoreId, setScrolledStoreId] = useState<string>(stores[0].id);\n\n  const parentEl = document.getElementById(\"storesContainer\");\n  parentEl?.addEventListener(\"scroll\", function (event) {\n    // checking whether fully visible\n    for (const [key, value] of Object.entries(storeIdToIndexMap)) {\n      const childEl = document.getElementById(`${key}`) as HTMLElement;\n      let position = childEl.getBoundingClientRect();\n      if (position.top >= 0 && position.bottom <= window.innerHeight) {\n        let val = Number(value);\n        setSelectedStore(stores[val]);\n      }\n    }\n  });\n\n  useEffect(() => {\n    const element = document.getElementById(scrolledStoreId);\n    element?.scrollIntoView({ behavior: \"smooth\" });\n  }, [scrolledStoreId]);\n\n  return (\n    <CityPageContext.Provider\n      value={{\n        city,\n        seletedCity,\n        selectedStore,\n        setSelectedStore,\n        isModalOpen,\n        setModalOpen,\n        stores,\n        storeIdToIndexMap,\n        scrolledStoreId,\n        setScrolledStoreId,\n      }}\n    >\n      <Router>\n        <Route path=\"/PlantStoreFinder/\">\n          <div className=\"App\">\n            {isModalOpen ? (\n              <MediaModal photos={selectedStore.photos} />\n            ) : undefined}\n            <div className=\"navContainer\">\n              <TopNav city={city} />\n            </div>\n            <div className=\"wrapper\">\n              <div\n                className={classNames(\n                  \"mapOutterContainer\",\n                  `${isModalOpen ? \"modalIsOpen\" : \"\"}`\n                )}\n                style={{ width: \"50vw\" }}\n              >\n                <Map center={[selectedStore.lat, selectedStore.lng]} />\n              </div>\n              <div className=\"storesContainer\" id=\"storesContainer\">\n                {stores.map((store) => (\n                  <div className=\"storeContainer\">\n                    <LazyLoadComponent>\n                      <StoreDetails store={store} id={store.id} />\n                      <StoreMedia id={store.id} photos={store.photos} />\n                    </LazyLoadComponent>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </Route>\n      </Router>\n    </CityPageContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}